# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "kalilinux/rolling"
#  config.vm.box = "kalilinux/rolling-light"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 9392, host: 9392, host_ip: "127.0.0.1" # openvas

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #

  config.ssh.insert_key = false # Fix for NTFS drives

  # VirtualBox specific settings
  config.vm.provider "virtualbox" do |vb|
    # Show the VirtualBox GUI when booting the machine
    vb.gui = true

    # Customize the amount of memory on the VM:
    vb.memory = "4096"
  end

  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.

  # copy add-apt-repository
  config.vm.provision "file", source:"scripts/add-apt-repository.sh", destination: "/tmp/add-apt-repository"

  # make it executable
  config.vm.provision "shell", run: "always", inline: <<-SHELL
    sudo mv /tmp/add-apt-repository /usr/sbin/add-apt-repository

    chmod +x /usr/sbin/add-apt-repository
  SHELL

  # start timer
  config.vm.provision "shell", run: "always", inline: <<-SHELL
  
    echo `date` > ~/start_vagrant_config  

  SHELL

  # useful tools
  config.vm.provision "shell", inline: <<-SHELL
    apt-get update
    # apt-get upgrade -y # takes too long...

    apt-get install -y htop iftop
  SHELL

  # virtualbox extensions
  config.vm.provision "shell", inline: <<-SHELL
    apt-get install -y build-essential dkms linux-headers-$(uname -r)
    apt-get install -y virtualbox-dkms virtualbox-guest-additions-iso virtualbox-guest-x11

    echo "REBOOT for a larger screen and other virtualbox-guest-additions goodies."

  SHELL

  # # torghost, a systemwide tor proxy service.
  # config.vm.provision "shell", inline: <<-SHELL
  #
  # apt-get install -y tor
  #
  # pushd /tmp/
  # git clone https://github.com/susmithHCK/torghost.git
  # pushd torghost
  #
  # chmod +x build.sh
  # ./build.sh
  #
  # chmod +x install.sh
  # ./install.sh
  #
  # popd
  # popd
  #
  # SHELL

  # Android emu
  config.vm.provision "shell", inline: <<-SHELL

  mkdir -p /home/vagrant/Desktop

  if [ -d "/home/vagrant/Desktop/android-sdk-linux/" ]; then
    echo "Android emu already set up."
    exit 0;
  fi

  mkdir /tmp/androidemu/
  pushd /tmp/androidemu/

  wget http://dl.google.com/android/android-sdk_r24.4.1-linux.tgz

  sudo tar -zxvf android-sdk_r24.4.1-linux.tgz

  mv android-sdk-linux/ /home/vagrant/Desktop/android-sdk-linux/

  popd

  SHELL

  # stop timer
  config.vm.provision "shell", run: "always", inline: <<-SHELL
  
    echo `date` > ~/stop_vagrant_config  

    echo "Start time:"
    cat ~/start_vagrant_config

    echo "Stop time:"
    cat ~/stop_vagrant_config

  SHELL


end
