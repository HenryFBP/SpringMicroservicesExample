# -*- mode: ruby -*-
# vi: set ft=ruby :

VM_NAME = 'Ubuntu 18.04 Development'
VM_RAM_MB = '8000'
VM_CPUS = '4'

Vagrant.configure("2") do |config|

  config.vm.box = "generic/ubuntu1804"
  config.vm.define VM_NAME

  # VirtualBox specific settings
  config.vm.provider "virtualbox" do |vb|
    # Show the VirtualBox GUI when booting the machine
    vb.gui = true

    # Customize the amount of memory on the VM:
    vb.memory = VM_RAM_MB
    vb.cpus = VM_CPUS

  end

  # initial apt-get update
  config.vm.provision "shell", inline: <<-SHELL
    apt-get update
  SHELL
  
  # fish shell
  config.vm.provision "shell", path: "../scripts/install-fish.sh"

  config.vm.provision "shell", inline: <<-SHELL

    apt install -y python3-pip #why is this not installed by default?!
    python3 -m pip install pipenv

    echo "Go grab a coffee, this may take a while..."
    apt install -y ubuntu-desktop #takes forever :p
    echo "You can run 'startx' to start desktop, or reboot."

    apt install -y snap gitk
    
    sudo snap install bashtop
    sudo snap install --classic code
    sudo snap install --classic gradle
    sudo snap install --classic powershell

    apt install -y gcc make perl ruby maven
    
    sudo snap install go --classic # we need this as we must be using at least go v1.14.1 ... apt-get gives us an older version >:(
    gem install mdless
    apt install -y apt-transport-https
    apt install -y software-properties-common wget
    apt install -y tasksel

    apt install -y docker docker-compose

    # fix for `docker ...` commands needing to be run as root. Note: may need to reboot. idk lol :p
    sudo groupadd docker
    sudo usermod -aG docker vagrant

    apt install -y openjdk-11-jdk
    apt install -y virtualbox-guest-additions-iso
    
    apt install -y vagrant

  SHELL

  # jb toolbox
  config.vm.provision "shell", path: "../scripts/install-jb-toolbox.sh"

  # clone cool repos
  config.vm.provision "shell", path: "../scripts/clone-cool-git-repos.sh"

  config.vm.provision "shell", inline: <<-SHELL

    sudo snap install --classic kubectl
    sudo snap install --classic helm

    # minikube stuff
    sudo apt install conntrack
    if [[ ! -f /usr/local/bin/minikube ]]; then
      echo "Installing minikube as it is not in /usr/local/bin/minikube!"
      curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
      sudo install minikube-linux-amd64 /usr/local/bin/minikube
    fi

    echo 'Run `sudo minikube start --driver=none` to start Minikube.'

SHELL

# this packer stuff takes forever
config.vm.provision "shell", path: "../scripts/install-packer-from-source.sh"
config.vm.provision "shell", path: "../scripts/install-packer-builder-arm.sh"

  config.vm.provision "shell", inline: <<-SHELL
    echo "Done. Take a snapshot!"
    echo "Run: 
    vagrant snapshot save 'after vagrant'"
  SHELL
end
