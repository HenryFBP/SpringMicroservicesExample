# -*- mode: ruby -*-
# vi: set ft=ruby :

VM_NAME = 'Ubuntu 18.04 Development'
VM_RAM_MB = '6000'
VM_CPUS = '4'

Vagrant.configure("2") do |config|

  config.vm.box = "generic/ubuntu1804"
  config.vm.define VM_NAME

  # VirtualBox specific settings
  config.vm.provider "virtualbox" do |vb|
    # Show the VirtualBox GUI when booting the machine
    vb.gui = true

    # Customize the amount of memory on the VM:
    vb.memory = VM_RAM_MB
    vb.cpus = VM_CPUS

  end

  config.vm.provision "shell", inline: <<-SHELL
    apt-get update

    apt install -y fish
    echo 'vagrant' | chsh vagrant -s /usr/bin/fish

    apt install -y python3-pip #why is this not installed by default?!
    python3 -m pip install pipenv

    apt install -y ubuntu-desktop #takes forever :p

    apt install -y snap
    sudo snap install bashtop
    apt install -y gcc make perl ruby
    sudo snap install go --classic # we need this as we must be using at least go v1.14.1 ... apt-get gives us an older version >:(
    gem install mdless
    apt install -y apt-transport-https
    apt install -y software-properties-common wget
    apt install -y tasksel


    apt install -y docker docker-compose

    # fix for `docker ...` commands needing to be run as root. Note: may need to reboot. idk lol :p
    sudo groupadd docker
    sudo usermod -aG docker vagrant

    apt install -y openjdk-11-jdk
    apt install -y virtualbox-guest-additions-iso
    
    apt install -y vagrant

    # packer setup, from source
    which packer
    if [ ! "$?" -eq "0" ]; then # if exit code is nonzero, it is not a command  
      echo "Installing packer from source, as it does not exist on path!"
      pushd /tmp/
      mkdir -p /tmp/packer-setup/
      pushd /tmp/packer-setup/
      wget https://github.com/hashicorp/packer/archive/refs/tags/v1.7.8.zip
      unzip v1.7.8.zip
      cd ./packer-*/
      echo "yay, time to wait :) gompilation dime :DDDD"
      go mod download
      mkdir -p ./bin/
      go build -o bin/packer ./
      chmod +x bin/packer
      mv bin/packer /bin/packer

      ls -lash /bin/packer
      packer -v
      popd # to /tmp
      popd # to whatever before
    fi


    # packer-builder-arm setup, from <https://github.com/mkaczanowski/packer-builder-arm>
    if [[ ! -f /usr/bin/packer-builder-arm ]]; then
      pushd /tmp/
      git clone https://github.com/mkaczanowski/packer-builder-arm
      cd packer-builder-arm
      go mod download
      go build
      chmod +x ./packer-builder-arm
      sudo cp ./packer-builder-arm /usr/bin/
      sudo packer build boards/odroid-u3/archlinuxarm.json || (echo "Failed! See packer-builder-arm section and fix!")
      popd    
    else
      echo "'/usr/bin/packer-builder-arm' already exists!"
    fi
    # end of packer-builder-arm setup

    sudo snap install --classic code

    sudo snap install --classic kubectl
    sudo snap install --classic helm

    # minikube stuff
    sudo apt install conntrack
    curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
    sudo install minikube-linux-amd64 /usr/local/bin/minikube
    echo 'then run `sudo minikube start --driver=none` to start it'
  SHELL

  config.vm.provision "shell", inline: <<-SHELL
    echo "Done. Take a snapshot!"
    echo "Run: 
    vagrant snapshot save 'after vagrant'"
  SHELL
end
