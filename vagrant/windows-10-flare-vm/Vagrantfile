# -*- mode: ruby -*-
# vi: set ft=ruby :

VM_NAME = 'Windows-10-flare-vm'
VM_IP = '192.168.33.16'

Vagrant.configure("2") do |config|

  config.vm.box = "gusztavvargadr/windows-10"

  config.vm.network "private_network", ip: VM_IP

  # disable default shared folder
  config.vm.synced_folder './', '/vagrant', disabled: true
  config.vm.synced_folder 'shared', '/vagrant'

  config.vm.define VM_NAME

  config.vm.provider 'virtualbox' do |v|
    v.name = VM_NAME

    v.gui = true

    v.memory = 8000
    v.cpus = 4

    v.customize ['modifyvm', :id, '--vram', '256']

#    v.customize ["storageattach", :id,
#                 "--storagectl", "IDE", #README May need to change to "IDE" or "IDE Controller!"
#                 "--port", "0", "--device", "1",
#                 "--type", "dvddrive",
#                 "--medium", "emptydrive"]

  end

  config.vm.provision "shell", privileged: "true", powershell_elevated_interactive: "true",
                      path: "../scripts/install-choco.ps1"

  config.vm.provision "shell", privileged: "true", powershell_elevated_interactive: "true",
                      path: "../scripts/install-git-using-choco.ps1"

  config.vm.provision "shell", inline: <<-SHELL

    If(!(test-path ~/Git)) {
      mkdir ~/Git
    }

    pushd ~/Git

    git clone https://github.com/stephenbradshaw/vulnserver
    git clone https://github.com/kbandla/ImmunityDebugger
    git clone https://github.com/corelan/mona
    git clone https://github.com/nsacyber/GRASSMARLIN
    git clone https://github.com/dzzie/pdfstreamdumper
    git clone https://github.com/henryfbp/mystery-files

    choco install graphviz

    # Add to path after cloning
    If(!(test-path "pdfobjflow3-python3"))
    {
      echo "$Env:Path" >> path_backup.txt
      git clone https://github.com/HenryFBP/pdfobjflow3-python3

      write-host "Original path: "
      write-host "$Env:Path"

      $objflowpath=(Get-Item -Path 'pdfobjflow3-python3').FullName
      $newpath="$Env:Path;$objflowpath"

      setx /M PATH "$newpath"

      refreshenv

      write-host "NEW path: "
      write-host "$Env:Path"
    }

    If(!(test-path "flare-vm"))
    {
      git clone https://github.com/fireeye/flare-vm
      pushd flare-vm
        Set-MpPreference -DisableRealtimeMonitoring $true #hopefully fixes "this is a virus REEEEEE" message from windows
        write-host "If this step fails just run it yourself on the VM as admin ;_;"
        powershell ./install.ps1 -Password vagrant
        Set-MpPreference -DisableRealtimeMonitoring $false
      popd
      write-host "Flare-VM installed. Your VM will now restart if it has not done so already."
    }

    write-host "Now would be a good time to take a snapshot before you start installing malware."
    write-host "Example - run 'vagrant snapshot save after-install'"


  SHELL

end
